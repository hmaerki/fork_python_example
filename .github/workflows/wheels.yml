name: Wheels

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
     - master
  release:
    types:
      - published

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Build SDist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v4
      with:
        name: cibw-sdist
        path: dist/*.tar.gz


  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v4

    # Snipped taked from: https://github.com/pypa/cibuildwheel
    # Used to host cibuildwheel
    - uses: actions/setup-python@v5

    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel==2.23.2

    - name: Build wheels
      run: python -m cibuildwheel --output-dir wheelhouse
      # to supply options, put them in 'env', like:
      # env:
      #   CIBW_SOME_OPTION: value
      #   ...

    - uses: actions/upload-artifact@v4
      with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  upload_all:
    name: Upload if release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
    - uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - uses: actions/download-artifact@v4
      with:
        pattern: cibw-*
        path: dist
        merge-multiple: true

    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}

  create_release:
          name: Create GitHub Release
          needs: [build_wheels, build_sdist]
          runs-on: ubuntu-latest
            
          steps:
          - name: Create Release
            uses: actions/create-release@v1
            with:
              tag_name: ${{ github.ref_name }}
              release_name: Release ${{ github.ref_name }}
              body: |
                This release includes the latest built wheels and source distribution.
              draft: true
              prerelease: true
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          - name: Upload Release Assets
            uses: actions/upload-release-asset@v1
            with:
              upload_url: ${{ steps.create_release.outputs.upload_url }}
              asset_path: dist/*
              asset_name: ${{ github.ref_name }}-assets
              asset_content_type: application/octet-stream